{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zente/source/repos/KobaSystemsIT/Dashboard-Mineria/src/app/components/tooltips/PlusIcon.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\nimport { FiAlignJustify } from \"react-icons/fi\";\r\n\r\nconst PlusIcon = () => {\r\n  return (\r\n    <button className=\"relative  group z-50 bg-white rounded-md flex items-center justify-center p-2\">\r\n      <FiAlignJustify className=\"w-6 h-6 text-black\" />\r\n      <span className=\"absolute right-full transform -translate-y-1/2 mr-2 opacity-0 group-hover:opacity-100 transition-opacity bg-gray-700 text-white text-xs rounded py-1 px-2 whitespace-nowrap pointer-events-none\">\r\n        Generar Resumen (24h)\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PlusIcon;\r\n\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIA,MAAM,WAAW;IACf,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC,iJAAA,CAAA,iBAAc;gBAAC,WAAU;;;;;;0BAC1B,6LAAC;gBAAK,WAAU;0BAAkM;;;;;;;;;;;;AAKxN;KATM;uCAWS","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zente/source/repos/KobaSystemsIT/Dashboard-Mineria/src/app/components/tooltips/TriangleIcon.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\nimport { FiAlertTriangle } from \"react-icons/fi\";\r\nimport ReportProblemIcon from '@mui/icons-material/ReportProblem';\r\nimport '../../styles/pages.css';\r\n\r\nconst TriangleIcon = () => {\r\n  return (\r\n    <button className=\"relative group bg-white rounded-md flex items-center justify-center p-2\">\r\n      <ReportProblemIcon className=\"w-6 h-6 red-icon\" />\r\n      <span className=\"absolute left-full transform ml-2 opacity-0 group-hover:opacity-100 transition-opacity bg-red-400 text-white text-xs rounded py-1 px-2 whitespace-nowrap mr-2 pointer-events-none\">\r\n        Anomalía detectada\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TriangleIcon;"],"names":[],"mappings":";;;;AAGA;AAHA;;;;AAMA,MAAM,eAAe;IACnB,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC,qKAAA,CAAA,UAAiB;gBAAC,WAAU;;;;;;0BAC7B,6LAAC;gBAAK,WAAU;0BAAoL;;;;;;;;;;;;AAK1M;KATM;uCAWS","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zente/source/repos/KobaSystemsIT/Dashboard-Mineria/src/app/components/tooltips/ResElectricalIcon.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\nimport { FiBarChart } from \"react-icons/fi\";\r\n\r\nconst TriangleIcon = () => {\r\n  return (\r\n    <button className=\"relative group bg-white rounded-md flex items-center justify-center p-2\">\r\n      <FiBarChart className=\"w-6 h-6 text-black\" />\r\n      <span className=\"absolute right-full top-1/2 transform -translate-y-1/2 ml-2 opacity-0 group-hover:opacity-100 transition-opacity bg-gray-700 text-white text-xs rounded py-1 px-2 whitespace-nowrap pointer-events-none\">\r\n        Ver Historial\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TriangleIcon;"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIA,MAAM,eAAe;IACnB,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC,iJAAA,CAAA,aAAU;gBAAC,WAAU;;;;;;0BACtB,6LAAC;gBAAK,WAAU;0BAA0M;;;;;;;;;;;;AAKhO;KATM;uCAWS","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zente/source/repos/KobaSystemsIT/Dashboard-Mineria/src/app/components/tooltips/ResIrradianceIcon.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\nimport { FiBarChart } from \"react-icons/fi\";\r\n\r\n\r\nconst TriangleIcon = () => {\r\n  return (\r\n    <button className=\"relative group z-50 bg-white rounded-md flex items-center justify-center p-2\">\r\n      <FiBarChart className=\"w-6 h-6 text-black\" />\r\n      <span className=\"absolute left-full top-1/2 transform -translate-y-1/2 ml-2 opacity-0 group-hover:opacity-100 transition-opacity bg-gray-700 text-white text-xs rounded py-1 px-2 whitespace-nowrap pointer-events-none\">\r\n        Ver Historial\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TriangleIcon;"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAKA,MAAM,eAAe;IACnB,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC,iJAAA,CAAA,aAAU;gBAAC,WAAU;;;;;;0BACtB,6LAAC;gBAAK,WAAU;0BAAyM;;;;;;;;;;;;AAK/N;KATM;uCAWS","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zente/source/repos/KobaSystemsIT/Dashboard-Mineria/src/app/components/tooltips/ResEnviromentIcon.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\nimport { FiBarChart } from \"react-icons/fi\";\r\n\r\nconst TriangleIcon = () => {\r\n  return (\r\n    <button className=\"relative group z-50 bg-white rounded-md flex items-center justify-center p-2\">\r\n      <FiBarChart className=\"w-6 h-6 text-black\" />\r\n      <span className=\"absolute right-full top-1/2 transform -translate-y-1/2 ml-2 opacity-0 group-hover:opacity-100 transition-opacity bg-gray-700 text-white text-xs rounded py-1 px-2 whitespace-nowrap pointer-events-none\">\r\n        Ver Historial\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TriangleIcon;"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIA,MAAM,eAAe;IACnB,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC,iJAAA,CAAA,aAAU;gBAAC,WAAU;;;;;;0BACtB,6LAAC;gBAAK,WAAU;0BAA0M;;;;;;;;;;;;AAKhO;KATM;uCAWS","debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zente/source/repos/KobaSystemsIT/Dashboard-Mineria/src/app/components/graphs/MinMaxEnviromentGraph.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend);\r\n\r\nconst HorizontalBarChart = ({ summaryData }: { summaryData: any }) => {\r\n  const labels = [\"Temp\", \"Viento\"];\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: \"Mínimo\",\r\n        data: [\r\n          summaryData.minTemperature,\r\n          summaryData.minWindSpeed,\r\n         \r\n        ],\r\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n        borderColor: \"rgba(255, 99, 132, 1)\",\r\n        borderWidth: 1,\r\n      },\r\n      {\r\n        label: \"Máximo\",\r\n        data: [\r\n          summaryData.maxTemperature,\r\n          summaryData.maxWindSpeed,\r\n          \r\n        ],\r\n        backgroundColor: \"rgba(54, 162, 235, 0.5)\",\r\n        borderColor: \"rgba(54, 162, 235, 1)\",\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    indexAxis: \"y\" as const,\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: { position: \"right\" as const },\r\n      title: { display: true, text: \"Valores Ambientales\" },\r\n    },\r\n  };\r\n\r\n  return <Bar data={data} options={options} />;\r\n};\r\n\r\nexport default HorizontalBarChart;"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAaA,+JAAA,CAAA,QAAO,CAAC,QAAQ,CAAC,+JAAA,CAAA,aAAU,EAAE,+JAAA,CAAA,gBAAa,EAAE,+JAAA,CAAA,cAAW,EAAE,+JAAA,CAAA,QAAK,EAAE,+JAAA,CAAA,UAAO,EAAE,+JAAA,CAAA,SAAM;AAE/E,MAAM,qBAAqB,CAAC,EAAE,WAAW,EAAwB;IAC/D,MAAM,SAAS;QAAC;QAAQ;KAAS;IACjC,MAAM,OAAO;QACX,QAAQ;QACR,UAAU;YACR;gBACE,OAAO;gBACP,MAAM;oBACJ,YAAY,cAAc;oBAC1B,YAAY,YAAY;iBAEzB;gBACD,iBAAiB;gBACjB,aAAa;gBACb,aAAa;YACf;YACA;gBACE,OAAO;gBACP,MAAM;oBACJ,YAAY,cAAc;oBAC1B,YAAY,YAAY;iBAEzB;gBACD,iBAAiB;gBACjB,aAAa;gBACb,aAAa;YACf;SACD;IACH;IAEA,MAAM,UAAU;QACd,WAAW;QACX,YAAY;QACZ,qBAAqB;QACrB,SAAS;YACP,QAAQ;gBAAE,UAAU;YAAiB;YACrC,OAAO;gBAAE,SAAS;gBAAM,MAAM;YAAsB;QACtD;IACF;IAEA,qBAAO,6LAAC,yJAAA,CAAA,MAAG;QAAC,MAAM;QAAM,SAAS;;;;;;AACnC;KAzCM;uCA2CS","debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zente/source/repos/KobaSystemsIT/Dashboard-Mineria/src/app/components/EnviromentSummary.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\nimport StormIcon from '@mui/icons-material/Storm';\r\nimport AirIcon from '@mui/icons-material/Air';\r\nimport SpeedIcon from '@mui/icons-material/Speed';\r\nimport HorizontalBarChart from \"./graphs/MinMaxEnviromentGraph\";\r\nimport { FaTemperatureLow } from \"react-icons/fa\";\r\n\r\n\r\n\r\ninterface SummaryData {\r\n  minTemperature: number;\r\n  maxTemperature: number;\r\n  avgTemperature: number;\r\n  minWindSpeed: number;\r\n  maxWindSpeed: number;\r\n  avgWindSpeed: number;\r\n  minWindDirection: number;\r\n  maxWindDirection: number;\r\n  avgWindDirection: number;\r\n  anomaliesFound: number;\r\n}\r\n\r\nconst EnvironmentSummarySection = ({ summaryData }: { summaryData: SummaryData }) => {\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row gap-8 p-4 text-black\">\r\n      {/* Lista de iconos con valores */}\r\n      <div className=\"flex flex-col space-y-4 md:w-1/2\">\r\n        {/* Bloque Temperatura */}\r\n        <div className=\"flex items-center space-x-3 p-2 bg-white rounded shadow-xl\">\r\n          <FaTemperatureLow style={{ color: \"#f56565\" }} className=\"w-8 h-8\" />\r\n          <div>\r\n            <p className=\"font-medium\">Temp (°C)</p>\r\n            <p>Mín: {summaryData.minTemperature}°</p>\r\n            <p>Máx: {summaryData.maxTemperature}°</p>\r\n            <p>Prom: {summaryData.avgTemperature}°</p>\r\n          </div>\r\n        </div>\r\n        {/* Bloque Velocidad de Viento */}\r\n        <div className=\"flex items-center space-x-3 p-2 bg-white rounded shadow-xl\">\r\n          <SpeedIcon style={{ color: \"#68d391\" }} className=\"w-8 h-8\" />\r\n          <div>\r\n            <p className=\"font-medium\">Viento (m/s)</p>\r\n            <p>Mín: {summaryData.minWindSpeed}</p>\r\n            <p>Máx: {summaryData.maxWindSpeed}</p>\r\n            <p>Prom: {summaryData.avgWindSpeed}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Gráfico de barras */}\r\n      <div className=\"w-full md:w-1/2 h-64\">\r\n        <HorizontalBarChart summaryData={summaryData} />\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnvironmentSummarySection;"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AANA;;;;;AAuBA,MAAM,4BAA4B,CAAC,EAAE,WAAW,EAAgC;IAC9E,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,iJAAA,CAAA,mBAAgB;gCAAC,OAAO;oCAAE,OAAO;gCAAU;gCAAG,WAAU;;;;;;0CACzD,6LAAC;;kDACC,6LAAC;wCAAE,WAAU;kDAAc;;;;;;kDAC3B,6LAAC;;4CAAE;4CAAM,YAAY,cAAc;4CAAC;;;;;;;kDACpC,6LAAC;;4CAAE;4CAAM,YAAY,cAAc;4CAAC;;;;;;;kDACpC,6LAAC;;4CAAE;4CAAO,YAAY,cAAc;4CAAC;;;;;;;;;;;;;;;;;;;kCAIzC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,6JAAA,CAAA,UAAS;gCAAC,OAAO;oCAAE,OAAO;gCAAU;gCAAG,WAAU;;;;;;0CAClD,6LAAC;;kDACC,6LAAC;wCAAE,WAAU;kDAAc;;;;;;kDAC3B,6LAAC;;4CAAE;4CAAM,YAAY,YAAY;;;;;;;kDACjC,6LAAC;;4CAAE;4CAAM,YAAY,YAAY;;;;;;;kDACjC,6LAAC;;4CAAE;4CAAO,YAAY,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;0BAMxC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,+JAAA,CAAA,UAAkB;oBAAC,aAAa;;;;;;;;;;;;;;;;;AAKzC;KAlCM;uCAoCS","debugId":null}},
    {"offset": {"line": 506, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zente/source/repos/KobaSystemsIT/Dashboard-Mineria/src/app/components/sensorCount.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\n\r\ninterface SensorData {\r\n  ac: {\r\n    valor: number;\r\n    power: number;\r\n  };\r\n  dc: {\r\n    valor: number;\r\n    power: number;\r\n  };\r\n}\r\n\r\ninterface SensorsListProps {\r\n  sensors: { [sensorName: string]: SensorData };\r\n}\r\n\r\nconst SensorsList: React.FC<SensorsListProps> = ({ sensors }) => {\r\n  return (\r\n    <div className=\"flex flex-col gap-4\">\r\n      {Object.entries(sensors).map(([sensorName, sensorData]) => (\r\n        <div key={sensorName} className=\"rounded p-4 shadow-xl\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\r\n            <h2 className=\"text-xl font-bold\">{sensorName}</h2>\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <div>\r\n              <span className=\"font-semibold\">AC:</span> Valor: {sensorData.ac.valor}, Power: {sensorData.ac.power}\r\n            </div>\r\n            <div>\r\n              <span className=\"font-semibold\">DC:</span> Valor: {sensorData.dc.valor}, Power: {sensorData.dc.power}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SensorsList;"],"names":[],"mappings":";;;;AAAA;;AAkBA,MAAM,cAA0C,CAAC,EAAE,OAAO,EAAE;IAC1D,qBACE,6LAAC;QAAI,WAAU;kBACZ,OAAO,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,YAAY,WAAW,iBACpD,6LAAC;gBAAqB,WAAU;;kCAC9B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAG,WAAU;0CAAqB;;;;;;;;;;;;kCAErC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;kDACC,6LAAC;wCAAK,WAAU;kDAAgB;;;;;;oCAAU;oCAAS,WAAW,EAAE,CAAC,KAAK;oCAAC;oCAAU,WAAW,EAAE,CAAC,KAAK;;;;;;;0CAEtG,6LAAC;;kDACC,6LAAC;wCAAK,WAAU;kDAAgB;;;;;;oCAAU;oCAAS,WAAW,EAAE,CAAC,KAAK;oCAAC;oCAAU,WAAW,EAAE,CAAC,KAAK;;;;;;;;;;;;;;eAVhG;;;;;;;;;;AAiBlB;KArBM;uCAuBS","debugId":null}},
    {"offset": {"line": 616, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 622, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zente/source/repos/KobaSystemsIT/Dashboard-Mineria/src/app/components/ModalResumen.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { \n  Modal, Button, CircularProgress, List, ListItem, ListItemText,\n  IconButton, TextField, Typography, Box, Paper, Divider, Chip, \n  ThemeProvider, createTheme, useTheme, Grid, Tabs, Tab,\n  Select, MenuItem, FormControl, InputLabel, Slider, Switch, FormControlLabel,\n  Dialog, DialogTitle, DialogContent, DialogActions, Tooltip, Alert\n} from \"@mui/material\";\nimport { \n  ArrowUpward, BarChart, InsertDriveFile, CloudDownload, \n  WbSunny, BatteryChargingFull, Thermostat, ColorLens, FormatSize,\n  Info, HelpOutline, Assessment, ShowChart, Refresh\n} from \"@mui/icons-material\";\nimport { jsPDF } from \"jspdf\";\nimport \"jspdf-autotable\";\nimport axios from \"axios\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip as ChartTooltip, Legend, registerables } from 'chart.js';\nimport { Line, Bar, Scatter, Pie } from 'react-chartjs-2';\n\n// Registrar componentes de Chart.js\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, ChartTooltip, Legend, ...registerables);\n\n// Interfaces para los datos de los endpoints\ninterface IrradianceVsPower {\n  graph_type: string;\n  description: string;\n  data: {\n    timestamp: string;\n    irradiance: number;\n    total_power: number;\n  }[];\n}\n\ninterface HistogramData {\n  graph_type: string;\n  measurement_type: string;\n  description: string;\n  bins: string[];\n  counts: number[];\n  expected_time: string;\n  alert: string | null;\n  time_distribution: Record<string, number>;\n  extremes: {\n    highest: {\n      inverter: string;\n      value: number;\n    };\n    lowest: {\n      inverter: string;\n      value: number;\n    };\n  };\n}\n\ninterface TemperatureVsPower {\n  graph_type: string;\n  description: string;\n  data: {\n    timestamp: string;\n    temperature: number;\n    total_power: number;\n  }[];\n  time_slot_summary: Record<string, number>;\n  expected_time: string;\n  alert: string | null;\n}\n\ninterface WindVsTemperature {\n  graph_type: string;\n  description: string;\n  data: {\n    timestamp: string;\n    temperature: number;\n    wind_speed: number;\n  }[];\n  expected_time: string;\n  alert: string | null;\n}\n\ninterface PowerAnomalies {\n  graph_type: string;\n  description: string;\n  total_anomalies: number;\n  anomalies: Record<string, any[]>;\n}\n\ninterface EnergyByHour {\n  graph_type: string;\n  description: string;\n  data: {\n    hour: string;\n    energy_generated: number;\n  }[];\n  expected_time: string;\n  alert: string | null;\n  time_slot_summary: Record<string, number>;\n  extremes: {\n    highest_hour: {\n      hour: string;\n      energy: number;\n    };\n    lowest_hour: {\n      hour: string;\n      energy: number;\n    };\n  };\n}\n\n// Interfaz para opciones de tema personalizado\ninterface ThemeOptions {\n  primaryColor: string;\n  secondaryColor: string;\n  bgColor: string;\n  paperColor: string;\n  fontFamily: string;\n  borderRadius: number;\n  fontSize: number;\n  darkMode?: boolean;\n}\n\n// Tema personalizado para el modal\nconst createModalTheme = (customOptions: ThemeOptions = {\n  primaryColor: '#1976d2',\n  secondaryColor: '#2e7d32',\n  bgColor: '#f5f7fa',\n  paperColor: '#ffffff',\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  borderRadius: 8,\n  fontSize: 14,\n}) => {\n  const {\n    primaryColor,\n    secondaryColor,\n    bgColor,\n    paperColor,\n    fontFamily,\n    borderRadius,\n    fontSize,\n  } = customOptions;\n\n  return createTheme({\n    palette: {\n      primary: {\n        main: primaryColor,\n      },\n      secondary: {\n        main: secondaryColor,\n      },\n      background: {\n        default: bgColor,\n        paper: paperColor,\n      },\n    },\n    typography: {\n      fontFamily: fontFamily,\n      fontSize: fontSize,\n      h6: {\n        fontWeight: 600,\n      },\n    },\n    components: {\n      MuiButton: {\n        styleOverrides: {\n          root: {\n            borderRadius: borderRadius,\n            textTransform: 'none',\n            fontWeight: 600,\n          },\n        },\n      },\n      MuiPaper: {\n        styleOverrides: {\n          root: {\n            borderRadius: borderRadius,\n            boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\n          },\n        },\n      },\n    },\n  });\n};\n\n// Definiciones de fuentes disponibles\nconst availableFonts = [\n  '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  '\"Times New Roman\", Times, serif',\n  'Georgia, serif',\n  '\"Courier New\", Courier, monospace',\n  'Arial, sans-serif',\n  '\"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif'\n];\n\n// Plantilla base para los reportes\nconst reportTemplates = {\n  basic: {\n    title: \"Reporte de Minería de Datos\",\n    headerColor: \"#1976d2\",\n    sections: [\n      { title: \"Resumen\", type: \"text\" },\n      { title: \"Datos de Irradiancia\", type: \"data\", key: \"irradiance\" },\n      { title: \"Datos de Voltaje\", type: \"data\", key: \"voltage\" },\n      { title: \"Datos de Ambiente\", type: \"data\", key: \"environment\" }\n    ]\n  },\n  detailed: {\n    title: \"Análisis Detallado de Datos\",\n    headerColor: \"#2e7d32\",\n    sections: [\n      { title: \"Resumen Ejecutivo\", type: \"text\" },\n      { title: \"Análisis de Irradiancia\", type: \"data\", key: \"irradiance\" },\n      { title: \"Análisis de Voltaje\", type: \"data\", key: \"voltage\" },\n      { title: \"Análisis de Ambiente\", type: \"data\", key: \"environment\" },\n      { title: \"Recomendaciones\", type: \"text\" }\n    ]\n  }\n};\n\n// Datos simulados para pruebas\nconst sampleData = {\n  irradiance: {\n    labels: [\"Ene\", \"Feb\", \"Mar\", \"Abr\", \"May\"],\n    values: [750, 800, 820, 780, 840],\n    min: 750,\n    max: 840,\n    avg: 798,\n    unit: \"W/m²\"\n  },\n  voltage: {\n    labels: [\"Ene\", \"Feb\", \"Mar\", \"Abr\", \"May\"],\n    values: [120, 122, 119, 121, 120],\n    min: 119,\n    max: 122,\n    avg: 120.4,\n    unit: \"V\"\n  },\n  environment: {\n    temperature: {\n      labels: [\"Ene\", \"Feb\", \"Mar\", \"Abr\", \"May\"],\n      values: [25, 27, 30, 28, 32],\n      min: 25,\n      max: 32,\n      avg: 28.4,\n      unit: \"°C\"\n    },\n    humidity: {\n      labels: [\"Ene\", \"Feb\", \"Mar\", \"Abr\", \"May\"],\n      values: [45, 52, 48, 50, 55],\n      min: 45,\n      max: 55,\n      avg: 50,\n      unit: \"%\"\n    }\n  }\n};\n\n// Interfaces para el tipado\ninterface ReportModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\ninterface Template {\n  title: string;\n  headerColor: string;\n  sections: {\n    title: string;\n    type: string;\n    key?: string;\n  }[];\n}\n\ninterface PdfItem {\n  id: string;\n  name: string;\n  version: number;\n  content: string;\n  data: typeof sampleData;\n  template: Template;\n  createdAt: string;\n}\n\n// Extender la interfaz de jsPDF para incluir métodos que usa el código\ndeclare module 'jspdf' {\n  interface jsPDF {\n    getNumberOfPages(): number;\n    autoTable?: (options: any) => any;\n  }\n}\n\n// Valores predeterminados para el tema\nconst defaultThemeSettings: ThemeOptions = {\n  primaryColor: '#1976d2',\n  secondaryColor: '#2e7d32',\n  bgColor: '#f5f7fa',\n  paperColor: '#ffffff',\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  borderRadius: 8,\n  fontSize: 14,\n  darkMode: false\n};\n\n// Componente principal\nconst ReportModal: React.FC<ReportModalProps> = ({ open, onClose }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [reportText, setReportText] = useState<string>(\"\");\n  const [pdfList, setPdfList] = useState<PdfItem[]>([]);\n  const [upgrading, setUpgrading] = useState<string | null>(null);\n  const [upgradeText, setUpgradeText] = useState<string>(\"\");\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [selectedTemplate, setSelectedTemplate] = useState<Template>(reportTemplates.basic);\n  \n  // Estados para personalización de temas\n  const [themeSettings, setThemeSettings] = useState<ThemeOptions>(defaultThemeSettings);\n  \n  // Estado para controlar el panel de personalización\n  const [customizeOpen, setCustomizeOpen] = useState<boolean>(false);\n  \n  // Estado para el diálogo de ayuda de formato\n  const [helpDialogOpen, setHelpDialogOpen] = useState<boolean>(false);\n  \n  // Estados para los datos de los gráficos\n  const [irradianceVsPowerData, setIrradianceVsPowerData] = useState<IrradianceVsPower | null>(null);\n  const [voltageHistogramData, setVoltageHistogramData] = useState<HistogramData | null>(null);\n  const [currentHistogramData, setCurrentHistogramData] = useState<HistogramData | null>(null);\n  const [temperatureVsPowerData, setTemperatureVsPowerData] = useState<TemperatureVsPower | null>(null);\n  const [windVsTemperatureData, setWindVsTemperatureData] = useState<WindVsTemperature | null>(null);\n  const [powerAnomaliesData, setPowerAnomaliesData] = useState<PowerAnomalies | null>(null);\n  const [energyByHourData, setEnergyByHourData] = useState<EnergyByHour | null>(null);\n  \n  // Estado para controlar errores de carga de datos\n  const [dataError, setDataError] = useState<string | null>(null);\n  \n  // Estado para mostrar panel de gráficos\n  const [showGraphsPanel, setShowGraphsPanel] = useState<boolean>(false);\n  \n  // Crear tema basado en configuraciones\n  const modalTheme = createModalTheme(themeSettings);\n  \n  // Cargar datos desde localStorage al iniciar\n  useEffect(() => {\n    // Cargar reportes generados\n    const savedReports = localStorage.getItem('reports');\n    if (savedReports) {\n      setPdfList(JSON.parse(savedReports));\n    }\n\n    // Cargar configuración de tema personalizado\n    const savedTheme = localStorage.getItem('theme-settings');\n    if (savedTheme) {\n      try {\n        const parsedTheme = JSON.parse(savedTheme);\n        setThemeSettings(parsedTheme);\n      } catch (error) {\n        console.error(\"Error al cargar configuración de tema:\", error);\n      }\n    }\n  }, []);\n\n  // Guardar en localStorage cuando cambia pdfList\n  useEffect(() => {\n    if (pdfList.length > 0) {\n      localStorage.setItem('reports', JSON.stringify(pdfList));\n    }\n  }, [pdfList]);\n\n  // Guardar configuración de tema cuando cambia\n  useEffect(() => {\n    localStorage.setItem('theme-settings', JSON.stringify(themeSettings));\n  }, [themeSettings]);\n\n  // Función que simula un webhook para obtener datos en tiempo real\n  const fetchDataFromWebhook = async () => {\n    // En un caso real, esta función haría una petición a una API\n    // Por ahora, simularemos con un timeout y datos de muestra\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        // Aquí se procesarían los datos del webhook\n        resolve({\n          success: true,\n          data: sampleData,\n          message: \"Datos obtenidos correctamente\"\n        });\n      }, 1500);\n    });\n  };\n\n  // Analiza argumentos en el texto para personalizar el reporte\n  const parseArguments = (text: string) => {\n    const args: Record<string, any> = {};\n    \n    // Buscar parámetros en formato [clave:valor]\n    const regex = /\\[([^:]+):([^\\]]+)\\]/g;\n    let match;\n    \n    while ((match = regex.exec(text)) !== null) {\n      const key = match[1].trim();\n      const value = match[2].trim();\n      args[key] = value;\n      \n      // Remover el argumento del texto original\n      text = text.replace(match[0], '');\n    }\n    \n    return { cleanText: text.trim(), args };\n  };\n\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n  };\n\n  const handleTemplateChange = (template: 'basic' | 'detailed') => {\n    setSelectedTemplate(reportTemplates[template]);\n  };\n\n  // Manejar cambios en los ajustes del tema\n  const handleThemeChange = (property: keyof ThemeOptions, value: any) => {\n    setThemeSettings(prev => ({\n      ...prev,\n      [property]: value\n    }));\n  };\n\n  // Aplicar tema personalizado a los PDF generados\n  const applyCustomThemeToPDF = (doc: jsPDF) => {\n    // Ajustar colores y estilos basado en themeSettings\n    if (themeSettings.darkMode) {\n      doc.setFillColor(themeSettings.secondaryColor);\n      doc.setTextColor(255, 255, 255);\n    } else {\n      doc.setFillColor(themeSettings.primaryColor);\n      doc.setTextColor(255, 255, 255);\n    }\n    \n    // Ajuste de fuente basado en la selección\n    let fontName = 'helvetica';\n    if (themeSettings.fontFamily.includes('Times')) {\n      fontName = 'times';\n    } else if (themeSettings.fontFamily.includes('Courier')) {\n      fontName = 'courier';\n    }\n    \n    doc.setFont(fontName);\n    \n    return doc;\n  };\n\n  // Función para generar canvas para cada gráfico\n  const generateChartCanvases = async () => {\n    if (!irradianceVsPowerData || !voltageHistogramData || !currentHistogramData || \n        !temperatureVsPowerData || !windVsTemperatureData || !energyByHourData) {\n      return null;\n    }\n    \n    // Crear elementos canvas para cada gráfico\n    const canvasContainer = document.createElement('div');\n    canvasContainer.style.position = 'absolute';\n    canvasContainer.style.left = '-9999px';\n    canvasContainer.style.width = '500px';\n    canvasContainer.style.height = '300px';\n    document.body.appendChild(canvasContainer);\n    \n    // Crear elementos de canvas para cada gráfico\n    const irradianceVsPowerCanvas = document.createElement('canvas');\n    irradianceVsPowerCanvas.width = 500;\n    irradianceVsPowerCanvas.height = 300;\n    canvasContainer.appendChild(irradianceVsPowerCanvas);\n    \n    const voltageHistogramCanvas = document.createElement('canvas');\n    voltageHistogramCanvas.width = 500;\n    voltageHistogramCanvas.height = 300;\n    canvasContainer.appendChild(voltageHistogramCanvas);\n    \n    const currentHistogramCanvas = document.createElement('canvas');\n    currentHistogramCanvas.width = 500;\n    currentHistogramCanvas.height = 300;\n    canvasContainer.appendChild(currentHistogramCanvas);\n    \n    const temperatureVsPowerCanvas = document.createElement('canvas');\n    temperatureVsPowerCanvas.width = 500;\n    temperatureVsPowerCanvas.height = 300;\n    canvasContainer.appendChild(temperatureVsPowerCanvas);\n    \n    const windVsTemperatureCanvas = document.createElement('canvas');\n    windVsTemperatureCanvas.width = 500;\n    windVsTemperatureCanvas.height = 300;\n    canvasContainer.appendChild(windVsTemperatureCanvas);\n    \n    const energyByHourCanvas = document.createElement('canvas');\n    energyByHourCanvas.width = 500;\n    energyByHourCanvas.height = 300;\n    canvasContainer.appendChild(energyByHourCanvas);\n    \n    // Función para renderizar un gráfico en un canvas\n    const renderChartToCanvas = (canvas: HTMLCanvasElement, chartType: string, data: any, options: any) => {\n      return new Promise<void>((resolve) => {\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n          resolve();\n          return;\n        }\n        \n        let chart: ChartJS;\n        \n        switch(chartType) {\n          case 'scatter':\n            chart = new ChartJS(ctx, {\n              type: 'scatter',\n              data,\n              options\n            });\n            break;\n          case 'bar':\n            chart = new ChartJS(ctx, {\n              type: 'bar',\n              data,\n              options\n            });\n            break;\n          case 'line':\n            chart = new ChartJS(ctx, {\n              type: 'line',\n              data,\n              options\n            });\n            break;\n          default:\n            chart = new ChartJS(ctx, {\n              type: 'bar',\n              data,\n              options\n            });\n        }\n        \n        // Esperar a que se renderice y resolver\n        setTimeout(() => {\n          resolve();\n        }, 100);\n      });\n    };\n    \n    // Preparar datos para los gráficos\n    const irradianceVsPowerChartData = {\n      datasets: [\n        {\n          label: 'Irradiancia vs Potencia',\n          data: irradianceVsPowerData.data.map(item => ({\n            x: item.irradiance,\n            y: item.total_power\n          })),\n          backgroundColor: 'rgba(25, 118, 210, 0.6)',\n          borderColor: '#1976d2',\n          borderWidth: 1,\n          pointRadius: 3,\n        }\n      ]\n    };\n    \n    // Filtrar bins con counts > 0 para el histograma de voltaje\n    const nonZeroVoltageCountsIndices = voltageHistogramData.counts\n      .map((count, index) => count > 0 ? index : -1)\n      .filter(index => index !== -1);\n    \n    const voltageHistogramChartData = {\n      labels: nonZeroVoltageCountsIndices.map(index => {\n        const bin = voltageHistogramData.bins[index];\n        const match = bin.match(/Bin \\d+ \\(([^-]+) - ([^)]+)\\)/);\n        if (match) {\n          return `${parseFloat(match[1]).toFixed(1)}-${parseFloat(match[2]).toFixed(1)}`;\n        }\n        return bin;\n      }),\n      datasets: [\n        {\n          label: 'Voltaje (V)',\n          data: nonZeroVoltageCountsIndices.map(index => voltageHistogramData.counts[index]),\n          backgroundColor: 'rgba(25, 118, 210, 0.6)',\n          borderColor: '#1976d2',\n          borderWidth: 1,\n        }\n      ]\n    };\n    \n    // Filtrar bins con counts > 0 para el histograma de corriente\n    const nonZeroCurrentCountsIndices = currentHistogramData.counts\n      .map((count, index) => count > 0 ? index : -1)\n      .filter(index => index !== -1);\n    \n    const currentHistogramChartData = {\n      labels: nonZeroCurrentCountsIndices.map(index => {\n        const bin = currentHistogramData.bins[index];\n        const match = bin.match(/Bin \\d+ \\(([^-]+) - ([^)]+)\\)/);\n        if (match) {\n          return `${parseFloat(match[1]).toFixed(1)}-${parseFloat(match[2]).toFixed(1)}`;\n        }\n        return bin;\n      }),\n      datasets: [\n        {\n          label: 'Corriente (A)',\n          data: nonZeroCurrentCountsIndices.map(index => currentHistogramData.counts[index]),\n          backgroundColor: 'rgba(230, 81, 0, 0.6)',\n          borderColor: '#e65100',\n          borderWidth: 1,\n        }\n      ]\n    };\n    \n    const temperatureVsPowerChartData = {\n      datasets: [\n        {\n          label: 'Temperatura vs Potencia',\n          data: temperatureVsPowerData.data.map(item => ({\n            x: item.temperature,\n            y: item.total_power\n          })),\n          backgroundColor: 'rgba(230, 81, 0, 0.6)',\n          borderColor: '#e65100',\n          borderWidth: 1,\n          pointRadius: 3,\n        }\n      ]\n    };\n    \n    const windVsTemperatureChartData = {\n      labels: windVsTemperatureData.data.map(item => {\n        const date = new Date(item.timestamp);\n        return `${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\n      }),\n      datasets: [\n        {\n          label: 'Temperatura (°C)',\n          data: windVsTemperatureData.data.map(item => item.temperature),\n          borderColor: '#e65100',\n          backgroundColor: 'rgba(0, 0, 0, 0)',\n        },\n        {\n          label: 'Velocidad del Viento (m/s)',\n          data: windVsTemperatureData.data.map(item => item.wind_speed),\n          borderColor: '#1976d2',\n          backgroundColor: 'rgba(0, 0, 0, 0)',\n        }\n      ]\n    };\n    \n    const energyByHourChartData = {\n      labels: energyByHourData.data.map(item => item.hour),\n      datasets: [\n        {\n          label: 'Energía Generada',\n          data: energyByHourData.data.map(item => item.energy_generated),\n          backgroundColor: 'rgba(25, 118, 210, 0.6)',\n          borderColor: '#1976d2',\n          borderWidth: 1,\n        }\n      ]\n    };\n    \n    // Opciones básicas para los gráficos en PDF\n    const basicOptions = {\n      responsive: false,\n      animation: false,\n      plugins: {\n        legend: {\n          display: true,\n          position: 'top' as const,\n        }\n      }\n    };\n    \n    // Renderizar todos los gráficos en sus respectivos canvas\n    await Promise.all([\n      renderChartToCanvas(irradianceVsPowerCanvas, 'scatter', irradianceVsPowerChartData, basicOptions),\n      renderChartToCanvas(voltageHistogramCanvas, 'bar', voltageHistogramChartData, basicOptions),\n      renderChartToCanvas(currentHistogramCanvas, 'bar', currentHistogramChartData, basicOptions),\n      renderChartToCanvas(temperatureVsPowerCanvas, 'scatter', temperatureVsPowerChartData, basicOptions),\n      renderChartToCanvas(windVsTemperatureCanvas, 'line', windVsTemperatureChartData, basicOptions),\n      renderChartToCanvas(energyByHourCanvas, 'bar', energyByHourChartData, basicOptions)\n    ]);\n    \n    // Devolver los canvas\n    return {\n      irradianceVsPower: irradianceVsPowerCanvas,\n      voltageHistogram: voltageHistogramCanvas,\n      currentHistogram: currentHistogramCanvas,\n      temperatureVsPower: temperatureVsPowerCanvas,\n      windVsTemperature: windVsTemperatureCanvas,\n      energyByHour: energyByHourCanvas,\n      container: canvasContainer\n    };\n  };\n\n  // Función para generar PDF con gráficos\n  const generatePDFWithCharts = async (report: PdfItem) => {\n    setLoading(true);\n    \n    try {\n      // Verificar si tenemos datos para los gráficos\n      if (!irradianceVsPowerData || !voltageHistogramData || !currentHistogramData || \n          !temperatureVsPowerData || !windVsTemperatureData || !energyByHourData) {\n        // Si no hay datos, intentar obtenerlos\n        await fetchGraphData();\n      }\n      \n      // Generar canvas para los gráficos\n      const chartCanvases = await generateChartCanvases();\n      \n      if (!chartCanvases) {\n        console.error(\"No se pudieron generar los canvas para los gráficos\");\n        setDataError(\"No se pudieron generar los gráficos para el PDF. Intenta nuevamente.\");\n        setLoading(false);\n        return;\n      }\n      \n      // Crear nuevo PDF\n      const doc = new jsPDF();\n      \n      // Aplicar tema personalizado\n      applyCustomThemeToPDF(doc);\n      \n      // Extraer argumentos del texto si existen\n      const { cleanText, args } = parseArguments(report.content);\n      \n      // Configurar ajustes basados en argumentos especiales\n      let textSize = themeSettings.fontSize;\n      let textColor = { r: 0, g: 0, b: 0 };\n      const palabrasResaltadas: string[] = [];\n      let formatoFecha = 'corto';\n      \n      // Procesar argumentos especiales\n      if (args.texto_grande === 'true') {\n        textSize += 4; // Aumentar tamaño del texto\n      }\n      \n      if (args.color_texto && args.color_texto.startsWith('#')) {\n        // Convertir hexadecimal a RGB\n        const hex = args.color_texto.substring(1);\n        textColor = {\n          r: parseInt(hex.substring(0, 2), 16),\n          g: parseInt(hex.substring(2, 4), 16),\n          b: parseInt(hex.substring(4, 6), 16)\n        };\n      }\n      \n      if (args.resaltar) {\n        palabrasResaltadas.push(args.resaltar);\n      }\n      \n      if (args.formato_fecha) {\n        formatoFecha = args.formato_fecha;\n      }\n      \n      // Aplicar diseño según plantilla y temas personalizados\n      doc.setFillColor(themeSettings.darkMode ? themeSettings.secondaryColor : report.template.headerColor);\n      doc.rect(0, 0, 210, 20, 'F');\n      doc.setTextColor(255, 255, 255);\n      doc.setFontSize(textSize + 2); // Título ligeramente más grande\n      doc.text(report.template.title, 105, 15, { align: \"center\" });\n      \n      // Formatear la fecha según el formato especificado\n      const fechaActual = new Date();\n      let fechaFormateada = fechaActual.toLocaleDateString();\n      \n      if (formatoFecha === 'largo') {\n        fechaFormateada = fechaActual.toLocaleDateString('es-ES', {\n          weekday: 'long',\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        });\n      }\n      \n      // Contenido principal\n      doc.setTextColor(themeSettings.darkMode ? 255 : textColor.r, \n                      themeSettings.darkMode ? 255 : textColor.g, \n                      themeSettings.darkMode ? 255 : textColor.b);\n      doc.setFontSize(textSize);\n      \n      let yPosition = 30;\n      \n      // Función para procesar texto resaltado\n      const procesarTextoResaltado = (texto: string) => {\n        // Si hay palabras a resaltar, implementar lógica aquí\n        if (palabrasResaltadas.length > 0) {\n          return texto; // Por ahora devolvemos el mismo texto\n          // Nota: jsPDF tiene limitaciones para resaltar texto directamente\n          // Una implementación completa requeriría dividir el texto y usar\n          // configuraciones de color diferentes para partes específicas\n        }\n        return texto;\n      };\n      \n      // Añadir resumen del reporte\n      const textoResaltado = procesarTextoResaltado(cleanText);\n      const splitText = doc.splitTextToSize(textoResaltado, 170);\n      doc.text(\"Resumen del Reporte:\", 20, yPosition);\n      yPosition += 10;\n      doc.text(splitText, 20, yPosition);\n      yPosition += splitText.length * 6 + 15;\n      \n      // Añadir sección de gráficos\n      doc.setFontSize(textSize + 2);\n      doc.setTextColor(parseInt(themeSettings.primaryColor.slice(1, 3), 16), \n                     parseInt(themeSettings.primaryColor.slice(3, 5), 16), \n                     parseInt(themeSettings.primaryColor.slice(5, 7), 16));\n      doc.text(\"Análisis Gráfico\", 20, yPosition);\n      yPosition += 10;\n      \n      // Resetear color del texto\n      doc.setTextColor(themeSettings.darkMode ? 255 : textColor.r, \n                      themeSettings.darkMode ? 255 : textColor.g, \n                      themeSettings.darkMode ? 255 : textColor.b);\n      doc.setFontSize(textSize);\n      \n      // Añadir gráficos de irradiancia vs potencia y temperatura vs potencia\n      doc.text(\"Relación de Irradiancia y Temperatura con la Potencia\", 20, yPosition);\n      yPosition += 8;\n      \n      // Añadir gráfico de irradiancia vs potencia\n      try {\n        const irradianceVsPowerDataURL = chartCanvases.irradianceVsPower.toDataURL('image/png');\n        doc.addImage(irradianceVsPowerDataURL, 'PNG', 20, yPosition, 80, 48);\n        \n        // Añadir gráfico de temperatura vs potencia a la derecha\n        const temperatureVsPowerDataURL = chartCanvases.temperatureVsPower.toDataURL('image/png');\n        doc.addImage(temperatureVsPowerDataURL, 'PNG', 110, yPosition, 80, 48);\n        \n        yPosition += 55;\n      } catch (error) {\n        console.error(\"Error al añadir gráficos de irradiancia y temperatura:\", error);\n        yPosition += 10;\n      }\n      \n      // Si llegamos a la parte inferior de la página, añadir una nueva página\n      if (yPosition > 250) {\n        doc.addPage();\n        yPosition = 20;\n      }\n      \n      // Añadir histogramas de voltaje y corriente\n      doc.text(\"Distribución de Voltaje y Corriente\", 20, yPosition);\n      yPosition += 8;\n      \n      try {\n        const voltageHistogramDataURL = chartCanvases.voltageHistogram.toDataURL('image/png');\n        doc.addImage(voltageHistogramDataURL, 'PNG', 20, yPosition, 80, 48);\n        \n        const currentHistogramDataURL = chartCanvases.currentHistogram.toDataURL('image/png');\n        doc.addImage(currentHistogramDataURL, 'PNG', 110, yPosition, 80, 48);\n        \n        yPosition += 55;\n      } catch (error) {\n        console.error(\"Error al añadir histogramas:\", error);\n        yPosition += 10;\n      }\n      \n      // Si llegamos a la parte inferior de la página, añadir una nueva página\n      if (yPosition > 250) {\n        doc.addPage();\n        yPosition = 20;\n      }\n      \n      // Añadir gráficos de viento vs temperatura y energía por hora\n      doc.text(\"Viento vs Temperatura y Energía por Hora\", 20, yPosition);\n      yPosition += 8;\n      \n      try {\n        const windVsTemperatureDataURL = chartCanvases.windVsTemperature.toDataURL('image/png');\n        doc.addImage(windVsTemperatureDataURL, 'PNG', 20, yPosition, 80, 48);\n        \n        const energyByHourDataURL = chartCanvases.energyByHour.toDataURL('image/png');\n        doc.addImage(energyByHourDataURL, 'PNG', 110, yPosition, 80, 48);\n        \n        yPosition += 55;\n      } catch (error) {\n        console.error(\"Error al añadir gráficos de viento y energía:\", error);\n        yPosition += 10;\n      }\n      \n      // Si hay recomendaciones, añadirlas\n      if (args.recomendaciones) {\n        // Si llegamos a la parte inferior de la página, añadir una nueva página\n        if (yPosition > 250) {\n          doc.addPage();\n          yPosition = 20;\n        }\n        \n        doc.setFontSize(textSize + 2);\n        doc.setTextColor(parseInt(themeSettings.primaryColor.slice(1, 3), 16), \n                       parseInt(themeSettings.primaryColor.slice(3, 5), 16), \n                       parseInt(themeSettings.primaryColor.slice(5, 7), 16));\n        doc.text(\"Recomendaciones\", 20, yPosition);\n        yPosition += 10;\n        \n        doc.setTextColor(themeSettings.darkMode ? 255 : textColor.r, \n                        themeSettings.darkMode ? 255 : textColor.g, \n                        themeSettings.darkMode ? 255 : textColor.b);\n        doc.setFontSize(textSize);\n        \n        const recomendaciones = procesarTextoResaltado(args.recomendaciones);\n        const splitRecomendaciones = doc.splitTextToSize(recomendaciones, 170);\n        doc.text(splitRecomendaciones, 20, yPosition);\n        yPosition += splitRecomendaciones.length * 6 + 10;\n      }\n      \n      // Añadir pie de página con la fecha formateada según la configuración\n      const pageCount = doc.getNumberOfPages();\n      for (let i = 1; i <= pageCount; i++) {\n        doc.setPage(i);\n        doc.setFontSize(textSize - 6);\n        doc.setTextColor(128, 128, 128);\n        doc.text(`Generado el ${fechaFormateada} - Página ${i} de ${pageCount}`, 105, 287, { align: 'center' });\n      }\n      \n      // Eliminar el contenedor de canvas\n      if (chartCanvases.container) {\n        document.body.removeChild(chartCanvases.container);\n      }\n      \n      // Guardar PDF\n      doc.save(report.name);\n      \n    } catch (error) {\n      console.error(\"Error al generar PDF con gráficos:\", error);\n      setDataError(\"Error al generar el PDF con gráficos. Intenta nuevamente.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generateReport = async () => {\n    setLoading(true);\n    setReportText(\"Obteniendo datos para el reporte...\");\n\n    try {\n      // Simular obtención de datos desde webhook\n      const response: any = await fetchDataFromWebhook();\n      \n      if (response.success) {\n        const reportData = response.data;\n        \n        // Generar texto de reporte\n        const reportDate = new Date().toLocaleDateString('es-ES', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        });\n        \n        const report = `Reporte generado el ${reportDate}: Análisis de irradiancia (${reportData.irradiance.min}-${reportData.irradiance.max} ${reportData.irradiance.unit}), voltaje (${reportData.voltage.min}-${reportData.voltage.max} ${reportData.voltage.unit}) y condiciones ambientales (temperatura ${reportData.environment.temperature.avg}${reportData.environment.temperature.unit}).`;\n        \n        setReportText(report);\n        \n        // Crear ID único para el reporte\n        const reportId = `report_${Date.now()}`;\n        const pdfName = `Reporte_${pdfList.length + 1}.pdf`;\n        \n        // Crear nuevo reporte\n        const newReport: PdfItem = {\n          id: reportId,\n          name: pdfName,\n          version: 1,\n          content: report,\n          data: JSON.parse(JSON.stringify(reportData)),\n          template: selectedTemplate,\n          createdAt: new Date().toISOString()\n        };\n        \n        // Generar PDF\n        generatePDFWithCharts(newReport);\n        \n        // Actualizar lista de reportes\n        setPdfList([...pdfList, newReport]);\n      } else {\n        setReportText(\"Error al obtener datos para el reporte\");\n      }\n    } catch (error) {\n      console.error(\"Error al generar reporte:\", error);\n      setReportText(\"Error al generar el reporte\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Función para iniciar la edición de un reporte\n  const handleUpgrade = (reportId: string) => {\n    const reportIndex = pdfList.findIndex(report => report.id === reportId);\n    if (reportIndex !== -1) {\n      setUpgrading(reportId);\n      setUpgradeText(pdfList[reportIndex].content);\n    }\n  };\n\n  // Función para aplicar la actualización de un reporte\n  const handleUpgradeSubmit = async () => {\n    if (!upgrading) return;\n    \n    const reportIndex = pdfList.findIndex(report => report.id === upgrading);\n    if (reportIndex === -1) return;\n    \n    const report = pdfList[reportIndex];\n    setLoading(true);\n    \n    try {\n      // Extraer argumentos del texto actualizado\n      const { cleanText, args } = parseArguments(upgradeText);\n      \n      // Actualizar el reporte\n      const updatedReport: PdfItem = {\n        ...report,\n        content: upgradeText,\n        version: report.version + 1,\n      };\n      \n      // Actualizar la lista de reportes\n      const updatedList = [...pdfList];\n      updatedList[reportIndex] = updatedReport;\n      setPdfList(updatedList);\n      \n      // Verificar si el nombre del reporte contiene \"Grafico\"\n      if (report.name.includes(\"Grafico\")) {\n        // Si es reporte con gráficos, regenerar con gráficos\n        await generatePDFWithCharts(updatedReport);\n      } else {\n        // Regenerar PDF normal\n        generatePDF(updatedReport);\n      }\n      \n      // Limpiar estado\n      setUpgrading(null);\n      setUpgradeText(\"\");\n    } catch (error) {\n      console.error(\"Error al actualizar reporte:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Formatear fecha para mostrar\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('es-ES', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Restablecer tema a valores predeterminados\n  const resetTheme = () => {\n    setThemeSettings({...defaultThemeSettings});\n  };\n\n  // Función para obtener los datos de los endpoints\n  const fetchGraphData = async () => {\n    setDataError(null);\n    setLoading(true);\n    \n    try {\n      // URLs de los endpoints\n      const endpoints = {\n        irradianceVsPower: 'http://localhost:8000/irradiance-vs-power',\n        voltageHistogram: 'http://localhost:8000/histogram/voltage',\n        currentHistogram: 'http://localhost:8000/histogram/current',\n        temperatureVsPower: 'http://localhost:8000/temperature-vs-power',\n        windVsTemperature: 'http://localhost:8000/wind-vs-temperature',\n        powerAnomalies: 'http://localhost:8000/power-anomalies',\n        energyByHour: 'http://localhost:8000/energy-by-hour'\n      };\n      \n      // Realizar peticiones en paralelo\n      const [\n        irradianceVsPowerResponse,\n        voltageHistogramResponse,\n        currentHistogramResponse,\n        temperatureVsPowerResponse,\n        windVsTemperatureResponse,\n        powerAnomaliesResponse,\n        energyByHourResponse\n      ] = await Promise.all([\n        axios.get(endpoints.irradianceVsPower),\n        axios.get(endpoints.voltageHistogram),\n        axios.get(endpoints.currentHistogram),\n        axios.get(endpoints.temperatureVsPower),\n        axios.get(endpoints.windVsTemperature),\n        axios.get(endpoints.powerAnomalies),\n        axios.get(endpoints.energyByHour)\n      ]);\n      \n      // Almacenar los datos en el estado\n      setIrradianceVsPowerData(irradianceVsPowerResponse.data);\n      setVoltageHistogramData(voltageHistogramResponse.data);\n      setCurrentHistogramData(currentHistogramResponse.data);\n      setTemperatureVsPowerData(temperatureVsPowerResponse.data);\n      setWindVsTemperatureData(windVsTemperatureResponse.data);\n      setPowerAnomaliesData(powerAnomaliesResponse.data);\n      setEnergyByHourData(energyByHourResponse.data);\n      \n      // Mostrar el panel de gráficos\n      setShowGraphsPanel(true);\n      \n    } catch (error) {\n      console.error(\"Error al obtener datos de gráficos:\", error);\n      setDataError(\"No se pudieron cargar los datos de los gráficos. Verifica que el servidor esté en funcionamiento.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Componente para renderizar gráficos de irradiancia vs potencia\n  const IrradianceVsPowerChart = ({ data, darkMode, width = 500, height = 300 }: { data: IrradianceVsPower, darkMode: boolean, width?: number, height?: number }) => {\n    const chartData = {\n      datasets: [\n        {\n          label: 'Irradiancia vs Potencia',\n          data: data.data.map(item => ({\n            x: item.irradiance,\n            y: item.total_power\n          })),\n          backgroundColor: darkMode ? 'rgba(46, 125, 50, 0.6)' : 'rgba(25, 118, 210, 0.6)',\n          borderColor: darkMode ? '#2e7d32' : '#1976d2',\n          borderWidth: 1,\n          pointRadius: 3,\n        }\n      ]\n    };\n\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: 'Irradiancia (W/m²)',\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          ticks: {\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          grid: {\n            color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: 'Potencia (W)',\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          ticks: {\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          grid: {\n            color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          backgroundColor: darkMode ? '#333333' : '#ffffff',\n          titleColor: darkMode ? '#ffffff' : '#333333',\n          bodyColor: darkMode ? '#ffffff' : '#333333',\n          borderColor: darkMode ? '#555555' : '#dddddd',\n          borderWidth: 1\n        }\n      }\n    };\n\n    return (\n      <Box sx={{ width, height }}>\n        <Scatter data={chartData} options={options as any} />\n      </Box>\n    );\n  };\n\n  // Componente para renderizar histograma\n  const HistogramChart = ({ data, darkMode, width = 500, height = 300 }: { data: HistogramData, darkMode: boolean, width?: number, height?: number }) => {\n    // Simplificar etiquetas para el histograma\n    const simplifiedBins = data.bins.map(bin => {\n      const match = bin.match(/Bin \\d+ \\(([^-]+) - ([^)]+)\\)/);\n      if (match) {\n        return `${parseFloat(match[1]).toFixed(1)}-${parseFloat(match[2]).toFixed(1)}`;\n      }\n      return bin;\n    });\n\n    // Filtrar bins con counts > 0 y sus etiquetas correspondientes\n    const nonZeroCounts = data.counts.filter(count => count > 0);\n    const nonZeroBins = data.bins.filter((_, index) => data.counts[index] > 0)\n      .map(bin => {\n        const match = bin.match(/Bin \\d+ \\(([^-]+) - ([^)]+)\\)/);\n        if (match) {\n          return `${parseFloat(match[1]).toFixed(1)}-${parseFloat(match[2]).toFixed(1)}`;\n        }\n        return bin;\n      });\n\n    const chartData = {\n      labels: nonZeroBins,\n      datasets: [\n        {\n          label: data.measurement_type === 'voltage' ? 'Voltaje (V)' : 'Corriente (A)',\n          data: nonZeroCounts,\n          backgroundColor: darkMode ? 'rgba(46, 125, 50, 0.6)' : 'rgba(25, 118, 210, 0.6)',\n          borderColor: darkMode ? '#2e7d32' : '#1976d2',\n          borderWidth: 1,\n        }\n      ]\n    };\n\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: data.measurement_type === 'voltage' ? 'Rango de Voltaje (V)' : 'Rango de Corriente (A)',\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          ticks: {\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          grid: {\n            color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: 'Frecuencia',\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          ticks: {\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          grid: {\n            color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    };\n\n    return (\n      <Box sx={{ width, height }}>\n        <Bar data={chartData} options={options as any} />\n      </Box>\n    );\n  };\n\n  // Componente para renderizar gráficos de temperatura vs potencia\n  const TemperatureVsPowerChart = ({ data, darkMode, width = 500, height = 300 }: { data: TemperatureVsPower, darkMode: boolean, width?: number, height?: number }) => {\n    const chartData = {\n      datasets: [\n        {\n          label: 'Temperatura vs Potencia',\n          data: data.data.map(item => ({\n            x: item.temperature,\n            y: item.total_power\n          })),\n          backgroundColor: darkMode ? 'rgba(230, 81, 0, 0.6)' : 'rgba(230, 81, 0, 0.6)',\n          borderColor: darkMode ? '#e65100' : '#e65100',\n          borderWidth: 1,\n          pointRadius: 3,\n        }\n      ]\n    };\n\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: 'Temperatura (°C)',\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          ticks: {\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          grid: {\n            color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: 'Potencia (W)',\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          ticks: {\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          grid: {\n            color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    };\n\n    return (\n      <Box sx={{ width, height }}>\n        <Scatter data={chartData} options={options as any} />\n      </Box>\n    );\n  };\n\n  // Componente para renderizar gráficos de viento vs temperatura\n  const WindVsTemperatureChart = ({ data, darkMode, width = 500, height = 300 }: { data: WindVsTemperature, darkMode: boolean, width?: number, height?: number }) => {\n    const chartData = {\n      labels: data.data.map(item => {\n        const date = new Date(item.timestamp);\n        return `${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\n      }),\n      datasets: [\n        {\n          label: 'Temperatura (°C)',\n          data: data.data.map(item => item.temperature),\n          borderColor: darkMode ? '#e65100' : '#e65100',\n          backgroundColor: 'rgba(0, 0, 0, 0)',\n          yAxisID: 'y',\n        },\n        {\n          label: 'Velocidad del Viento (m/s)',\n          data: data.data.map(item => item.wind_speed),\n          borderColor: darkMode ? '#2e7d32' : '#1976d2',\n          backgroundColor: 'rgba(0, 0, 0, 0)',\n          yAxisID: 'y1',\n        }\n      ]\n    };\n\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      interaction: {\n        mode: 'index' as const,\n        intersect: false,\n      },\n      stacked: false,\n      scales: {\n        y: {\n          type: 'linear' as const,\n          display: true,\n          position: 'left' as const,\n          title: {\n            display: true,\n            text: 'Temperatura (°C)',\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          ticks: {\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          grid: {\n            color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n          }\n        },\n        y1: {\n          type: 'linear' as const,\n          display: true,\n          position: 'right' as const,\n          title: {\n            display: true,\n            text: 'Velocidad del Viento (m/s)',\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          ticks: {\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          grid: {\n            drawOnChartArea: false,\n            color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n          },\n        },\n        x: {\n          ticks: {\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          grid: {\n            color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          labels: {\n            color: darkMode ? '#ffffff' : '#666666'\n          }\n        }\n      }\n    };\n\n    return (\n      <Box sx={{ width, height }}>\n        <Line data={chartData} options={options as any} />\n      </Box>\n    );\n  };\n\n  // Componente para renderizar gráficos de energía por hora\n  const EnergyByHourChart = ({ data, darkMode, width = 500, height = 300 }: { data: EnergyByHour, darkMode: boolean, width?: number, height?: number }) => {\n    const chartData = {\n      labels: data.data.map(item => item.hour),\n      datasets: [\n        {\n          label: 'Energía Generada',\n          data: data.data.map(item => item.energy_generated),\n          backgroundColor: darkMode ? 'rgba(46, 125, 50, 0.6)' : 'rgba(25, 118, 210, 0.6)',\n          borderColor: darkMode ? '#2e7d32' : '#1976d2',\n          borderWidth: 1,\n        }\n      ]\n    };\n\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      scales: {\n        x: {\n          title: {\n            display: true,\n            text: 'Hora del Día',\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          ticks: {\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          grid: {\n            color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n          }\n        },\n        y: {\n          title: {\n            display: true,\n            text: 'Energía (kWh)',\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          ticks: {\n            color: darkMode ? '#ffffff' : '#666666'\n          },\n          grid: {\n            color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\n          }\n        }\n      },\n      plugins: {\n        legend: {\n          display: false\n        }\n      }\n    };\n\n    return (\n      <Box sx={{ width, height }}>\n        <Bar data={chartData} options={options as any} />\n      </Box>\n    );\n  };\n\n  return (\n    <ThemeProvider theme={modalTheme}>\n      <Modal \n        open={open} \n        onClose={onClose}\n        aria-labelledby=\"report-modal-title\"\n      >\n        <Paper \n          elevation={3}\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: {xs: '90%', sm: '80%', md: '700px'},\n            maxHeight: '85vh',\n            overflow: 'auto',\n            p: 3,\n            bgcolor: themeSettings.darkMode ? '#2d2d2d' : 'background.paper',\n            borderRadius: themeSettings.borderRadius,\n            color: themeSettings.darkMode ? '#ffffff' : 'inherit',\n          }}\n        >\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Typography variant=\"h5\" component=\"h2\" id=\"report-modal-title\" gutterBottom className=\"text-black\">\n              Generador de Reportes Avanzado\n            </Typography>\n            \n            <Box>\n              <IconButton \n                color=\"primary\" \n                onClick={() => setCustomizeOpen(!customizeOpen)}\n                title=\"Personalizar tema\"\n              >\n                <ColorLens />\n              </IconButton>\n              \n              <IconButton \n                color=\"primary\" \n                onClick={fetchGraphData}\n                title=\"Cargar datos de gráficos\"\n                disabled={loading}\n              >\n                <Refresh />\n              </IconButton>\n            </Box>\n          </Box>\n          \n          {customizeOpen && (\n            <Paper \n              elevation={2} \n              sx={{ \n                p: 2, \n                mb: 2, \n                bgcolor: themeSettings.darkMode ? '#3d3d3d' : '#f8f9fa',\n                borderRadius: themeSettings.borderRadius - 2,\n              }}\n            >\n              <Typography variant=\"subtitle1\" gutterBottom fontWeight={600} sx={{ display: 'flex', alignItems: 'center' }}>\n                <ColorLens sx={{ mr: 1 }} /> Personalización de Tema\n              </Typography>\n              \n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth size=\"small\" sx={{ mb: 2 }}>\n                    <InputLabel>Tipo de fuente</InputLabel>\n                    <Select\n                      value={themeSettings.fontFamily}\n                      onChange={(e) => handleThemeChange('fontFamily', e.target.value)}\n                      label=\"Tipo de fuente\"\n                    >\n                      {availableFonts.map((font, index) => (\n                        <MenuItem key={index} value={font} style={{ fontFamily: font }}>\n                          {font.split(',')[0].replace(/['\"]/g, '')}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                  \n                  <Box sx={{ mb: 2 }}>\n                    <Typography id=\"font-size-slider\" gutterBottom variant=\"caption\">\n                      <FormatSize fontSize=\"small\" sx={{ verticalAlign: 'middle', mr: 0.5 }} />\n                      Tamaño de texto: {themeSettings.fontSize}px\n                    </Typography>\n                    <Slider\n                      value={themeSettings.fontSize}\n                      onChange={(_, value) => handleThemeChange('fontSize', value)}\n                      min={12}\n                      max={20}\n                      step={1}\n                      aria-labelledby=\"font-size-slider\"\n                    />\n                  </Box>\n                  \n                  <Box sx={{ mb: 2 }}>\n                    <Typography id=\"border-radius-slider\" gutterBottom variant=\"caption\">\n                      Borde redondeado: {themeSettings.borderRadius}px\n                    </Typography>\n                    <Slider\n                      value={themeSettings.borderRadius}\n                      onChange={(_, value) => handleThemeChange('borderRadius', value)}\n                      min={0}\n                      max={16}\n                      step={1}\n                      aria-labelledby=\"border-radius-slider\"\n                    />\n                  </Box>\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <Box sx={{ mb: 2 }}>\n                    <Typography gutterBottom variant=\"caption\">Color primario</Typography>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <Box \n                        sx={{ \n                          width: 24, \n                          height: 24, \n                          borderRadius: '50%', \n                          bgcolor: themeSettings.primaryColor,\n                          mr: 1,\n                          border: '1px solid #ccc'\n                        }} \n                      />\n                      <TextField\n                        type=\"color\"\n                        value={themeSettings.primaryColor}\n                        onChange={(e) => handleThemeChange('primaryColor', e.target.value)}\n                        size=\"small\"\n                        fullWidth\n                      />\n                    </Box>\n                  </Box>\n                  \n                  <Box sx={{ mb: 2 }}>\n                    <Typography gutterBottom variant=\"caption\">Color secundario</Typography>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <Box \n                        sx={{ \n                          width: 24, \n                          height: 24, \n                          borderRadius: '50%', \n                          bgcolor: themeSettings.secondaryColor,\n                          mr: 1,\n                          border: '1px solid #ccc'\n                        }} \n                      />\n                      <TextField\n                        type=\"color\"\n                        value={themeSettings.secondaryColor}\n                        onChange={(e) => handleThemeChange('secondaryColor', e.target.value)}\n                        size=\"small\"\n                        fullWidth\n                      />\n                    </Box>\n                  </Box>\n                  \n                  <Box sx={{ mb: 2 }}>\n                    <Typography gutterBottom variant=\"caption\">Color de fondo</Typography>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <Box \n                        sx={{ \n                          width: 24, \n                          height: 24, \n                          borderRadius: '50%', \n                          bgcolor: themeSettings.bgColor,\n                          mr: 1,\n                          border: '1px solid #ccc'\n                        }} \n                      />\n                      <TextField\n                        type=\"color\"\n                        value={themeSettings.bgColor}\n                        onChange={(e) => handleThemeChange('bgColor', e.target.value)}\n                        size=\"small\"\n                        fullWidth\n                      />\n                    </Box>\n                  </Box>\n                  \n                  <FormControlLabel\n                    control={\n                      <Switch \n                        checked={themeSettings.darkMode} \n                        onChange={(e) => handleThemeChange('darkMode', e.target.checked)}\n                      />\n                    }\n                    label=\"Modo oscuro\"\n                  />\n                </Grid>\n              </Grid>\n              \n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 1 }}>\n                <Button \n                  size=\"small\" \n                  color=\"error\"\n                  variant=\"outlined\"\n                  onClick={resetTheme}\n                  sx={{ mr: 1 }}\n                >\n                  Restablecer\n                </Button>\n                <Button \n                  size=\"small\" \n                  onClick={() => setCustomizeOpen(false)}\n                >\n                  Cerrar\n                </Button>\n              </Box>\n            </Paper>\n          )}\n          \n          {showGraphsPanel && (\n            <Paper \n              elevation={2} \n              sx={{ \n                p: 2, \n                mb: 2, \n                bgcolor: themeSettings.darkMode ? '#3d3d3d' : '#f8f9fa',\n                borderRadius: themeSettings.borderRadius - 2,\n              }}\n            >\n              <Typography variant=\"subtitle1\" gutterBottom fontWeight={600} sx={{ display: 'flex', alignItems: 'center' }}>\n                <Assessment sx={{ mr: 1 }} /> \n                Datos de gráficos cargados correctamente\n              </Typography>\n              \n              <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                Los siguientes gráficos se incluirán automáticamente en tu reporte PDF:\n              </Typography>\n              \n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <Box sx={{ mb: 1 }}>\n                    <Typography variant=\"caption\" fontWeight={600}>\n                      Irradiancia vs Potencia\n                    </Typography>\n                  </Box>\n                  {irradianceVsPowerData && (\n                    <Paper sx={{ p: 1, height: '150px', bgcolor: themeSettings.darkMode ? '#2d2d2d' : '#ffffff' }}>\n                      <IrradianceVsPowerChart \n                        data={irradianceVsPowerData} \n                        darkMode={themeSettings.darkMode} \n                        width={250} \n                        height={130} \n                      />\n                    </Paper>\n                  )}\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <Box sx={{ mb: 1 }}>\n                    <Typography variant=\"caption\" fontWeight={600}>\n                      Temperatura vs Potencia\n                    </Typography>\n                  </Box>\n                  {temperatureVsPowerData && (\n                    <Paper sx={{ p: 1, height: '150px', bgcolor: themeSettings.darkMode ? '#2d2d2d' : '#ffffff' }}>\n                      <TemperatureVsPowerChart \n                        data={temperatureVsPowerData} \n                        darkMode={themeSettings.darkMode} \n                        width={250} \n                        height={130} \n                      />\n                    </Paper>\n                  )}\n                </Grid>\n              </Grid>\n              \n              <Box sx={{ display: 'flex', justifyContent: 'flex-end', mt: 1 }}>\n                <Button \n                  size=\"small\" \n                  color=\"primary\"\n                  onClick={() => setShowGraphsPanel(false)}\n                >\n                  Cerrar\n                </Button>\n              </Box>\n            </Paper>\n          )}\n          \n          {dataError && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {dataError}\n            </Alert>\n          )}\n          \n          <Divider sx={{ my: 2 }} />\n          \n          <Tabs value={activeTab} onChange={handleTabChange} sx={{ mb: 3 }}>\n            <Tab label=\"Generar Reporte\" icon={<CloudDownload />} iconPosition=\"start\" />\n            <Tab label=\"Mis Reportes\" icon={<InsertDriveFile />} iconPosition=\"start\" />\n          </Tabs>\n          \n          {activeTab === 0 && (\n            <Box>\n              <Paper variant=\"outlined\" sx={{ p: 2, mb: 3, bgcolor: themeSettings.darkMode ? '#3d3d3d' : 'rgba(245, 247, 250, 0.5)' }}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  Seleccionar plantilla:\n                </Typography>\n                \n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <Paper \n                      elevation={selectedTemplate === reportTemplates.basic ? 3 : 1}\n                      onClick={() => handleTemplateChange('basic')}\n                      sx={{\n                        p: 2,\n                        cursor: 'pointer',\n                        border: selectedTemplate === reportTemplates.basic ? `2px solid ${themeSettings.primaryColor}` : 'none',\n                        transition: 'all 0.2s',\n                        '&:hover': { elevation: 3 },\n                        bgcolor: themeSettings.darkMode ? '#2d2d2d' : '#ffffff',\n                        color: themeSettings.darkMode ? '#ffffff' : 'inherit',\n                      }}\n                    >\n                      <Typography variant=\"subtitle1\" fontWeight={600} color=\"primary\">\n                        Plantilla Básica\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Formato estándar con secciones para resumen y datos principales.\n                      </Typography>\n                    </Paper>\n                  </Grid>\n                  \n                  <Grid item xs={12} sm={6}>\n                    <Paper \n                      elevation={selectedTemplate === reportTemplates.detailed ? 3 : 1}\n                      onClick={() => handleTemplateChange('detailed')}\n                      sx={{\n                        p: 2,\n                        cursor: 'pointer',\n                        border: selectedTemplate === reportTemplates.detailed ? `2px solid ${themeSettings.secondaryColor}` : 'none',\n                        transition: 'all 0.2s',\n                        '&:hover': { elevation: 3 },\n                        bgcolor: themeSettings.darkMode ? '#2d2d2d' : '#ffffff',\n                        color: themeSettings.darkMode ? '#ffffff' : 'inherit',\n                      }}\n                    >\n                      <Typography variant=\"subtitle1\" fontWeight={600} color=\"secondary\">\n                        Plantilla Detallada\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Formato extendido con análisis detallado y recomendaciones.\n                      </Typography>\n                    </Paper>\n                  </Grid>\n                </Grid>\n              </Paper>\n              \n              <Grid container spacing={2} sx={{ mb: 3 }}>\n                <Grid item xs={12} sm={6}>\n                  <Button \n                    variant=\"contained\" \n                    color=\"primary\"\n                    fullWidth\n                    size=\"large\"\n                    onClick={generateReport} \n                    disabled={loading}\n                    startIcon={loading ? <CircularProgress size={20} color=\"inherit\" /> : <CloudDownload />}\n                  >\n                    {loading ? \"Generando Reporte...\" : \"Generar Reporte Básico\"}\n                  </Button>\n                </Grid>\n                \n                <Grid item xs={12} sm={6}>\n                  <Button \n                    variant=\"contained\" \n                    color=\"secondary\"\n                    fullWidth\n                    size=\"large\"\n                    onClick={async () => {\n                      // Si no hay datos cargados, cargarlos primero\n                      if (!irradianceVsPowerData) {\n                        await fetchGraphData();\n                      }\n                      \n                      // Si hay datos o se acaban de cargar, generar el reporte\n                      if (irradianceVsPowerData) {\n                        setLoading(true);\n                        setReportText(\"Obteniendo datos para el reporte con gráficos...\");\n                        \n                        try {\n                          // Simular obtención de datos desde webhook\n                          const response: any = await fetchDataFromWebhook();\n                          \n                          if (response.success) {\n                            const reportData = response.data;\n                            \n                            // Generar texto de reporte\n                            const reportDate = new Date().toLocaleDateString('es-ES', {\n                              year: 'numeric',\n                              month: 'long',\n                              day: 'numeric'\n                            });\n                            \n                            const report = `Reporte generado el ${reportDate}: Análisis de irradiancia (${reportData.irradiance.min}-${reportData.irradiance.max} ${reportData.irradiance.unit}), voltaje (${reportData.voltage.min}-${reportData.voltage.max} ${reportData.voltage.unit}) y condiciones ambientales (temperatura ${reportData.environment.temperature.avg}${reportData.environment.temperature.unit}). Incluye análisis gráfico de relaciones entre variables.`;\n                            \n                            setReportText(report);\n                            \n                            // Crear ID único para el reporte\n                            const reportId = `report_${Date.now()}`;\n                            const pdfName = `Reporte_Grafico_${pdfList.length + 1}.pdf`;\n                            \n                            // Crear nuevo reporte\n                            const newReport: PdfItem = {\n                              id: reportId,\n                              name: pdfName,\n                              version: 1,\n                              content: report,\n                              data: JSON.parse(JSON.stringify(reportData)),\n                              template: selectedTemplate,\n                              createdAt: new Date().toISOString()\n                            };\n                            \n                            // Generar PDF con gráficos\n                            await generatePDFWithCharts(newReport);\n                            \n                            // Actualizar lista de reportes\n                            setPdfList([...pdfList, newReport]);\n                          } else {\n                            setReportText(\"Error al obtener datos para el reporte\");\n                          }\n                        } catch (error) {\n                          console.error(\"Error al generar reporte con gráficos:\", error);\n                          setReportText(\"Error al generar el reporte con gráficos\");\n                        } finally {\n                          setLoading(false);\n                        }\n                      }\n                    }} \n                    disabled={loading}\n                    startIcon={loading ? <CircularProgress size={20} color=\"inherit\" /> : <ShowChart />}\n                  >\n                    {loading ? \"Generando...\" : \"Generar con Gráficos\"}\n                  </Button>\n                </Grid>\n              </Grid>\n              \n              {reportText && (\n                <Paper \n                  variant=\"outlined\" \n                  sx={{ \n                    p: 2, \n                    mb: 3, \n                    bgcolor: themeSettings.darkMode \n                      ? 'rgba(46, 125, 50, 0.1)' \n                      : 'rgba(25, 118, 210, 0.05)',\n                    borderRadius: themeSettings.borderRadius - 2,\n                  }}\n                >\n                  <Typography variant=\"subtitle2\" color=\"primary\" gutterBottom>\n                    Vista previa:\n                  </Typography>\n                  <Typography \n                    variant=\"body1\"\n                    sx={{\n                      fontFamily: themeSettings.fontFamily,\n                      fontSize: themeSettings.fontSize / 16 + 'rem',\n                    }}\n                  >\n                    {reportText}\n                  </Typography>\n                </Paper>\n              )}\n              \n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\n                Puedes añadir argumentos especiales en formato [clave:valor] cuando edites un reporte para personalizar secciones específicas.\n              </Typography>\n            </Box>\n          )}\n          \n          {activeTab === 1 && (\n            <Box>\n              {pdfList.length === 0 ? (\n                <Paper \n                  sx={{ \n                    p: 3, \n                    textAlign: 'center', \n                    bgcolor: themeSettings.darkMode ? 'rgba(255,255,255,0.05)' : 'rgba(0,0,0,0.02)',\n                    borderRadius: themeSettings.borderRadius - 2,\n                  }}\n                >\n                  <Typography variant=\"body1\" color=\"text.secondary\">\n                    No hay reportes generados aún. Crea tu primer reporte desde la pestaña \"Generar Reporte\".\n                  </Typography>\n                </Paper>\n              ) : (\n                <List sx={{ bgcolor: 'background.paper', borderRadius: themeSettings.borderRadius - 2 }}>\n                  {pdfList.map((pdf, index) => (\n                    <Paper\n                      key={pdf.id} \n                      elevation={1}\n                      sx={{ \n                        mb: 2, \n                        overflow: 'hidden',\n                        bgcolor: themeSettings.darkMode ? '#2d2d2d' : '#ffffff',\n                        borderRadius: themeSettings.borderRadius - 2,\n                      }}\n                    >\n                      <ListItem \n                        sx={{ \n                          borderLeft: `4px solid ${themeSettings.darkMode ? themeSettings.secondaryColor : pdf.template.headerColor}`,\n                          transition: 'all 0.2s',\n                        }}\n                      >\n                        <Box sx={{ flexGrow: 1 }}>\n                          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                            <Typography \n                              variant=\"subtitle1\" \n                              fontWeight={600}\n                              sx={{\n                                fontFamily: themeSettings.fontFamily,\n                              }}\n                            >\n                              {pdf.name}\n                            </Typography>\n                            <Chip \n                              label={`v${pdf.version}`} \n                              size=\"small\" \n                              color={pdf.version > 1 ? \"secondary\" : \"primary\"}\n                              variant={pdf.version > 1 ? \"filled\" : \"outlined\"}\n                            />\n                          </Box>\n                          \n                          <Typography \n                            variant=\"body2\" \n                            color=\"text.secondary\" \n                            sx={{ \n                              mt: 0.5,\n                              fontFamily: themeSettings.fontFamily,\n                              fontSize: (themeSettings.fontSize - 2) / 16 + 'rem',\n                            }}\n                          >\n                            {pdf.content.substring(0, 80)}...\n                          </Typography>\n                          \n                          <Box sx={{ display: 'flex', mt: 1, alignItems: 'center' }}>\n                            <Typography variant=\"caption\" color=\"text.secondary\">\n                              Creado: {formatDate(pdf.createdAt)}\n                            </Typography>\n                            \n                            <Box sx={{ ml: 'auto', display: 'flex' }}>\n                              <IconButton\n                                size=\"small\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  // Verificar si el nombre del reporte contiene \"Grafico\"\n                                  if (pdf.name.includes(\"Grafico\")) {\n                                    // Si es reporte con gráficos\n                                    generatePDFWithCharts(pdf);\n                                  } else {\n                                    // Generar PDF normal\n                                    generatePDF(pdf);\n                                  }\n                                }}\n                                sx={{ mr: 1 }}\n                              >\n                                <CloudDownload fontSize=\"small\" />\n                              </IconButton>\n                              \n                              <IconButton\n                                size=\"small\"\n                                color=\"secondary\"\n                                onClick={() => handleUpgrade(pdf.id)}\n                              >\n                                <ArrowUpward fontSize=\"small\" />\n                              </IconButton>\n                            </Box>\n                          </Box>\n                        </Box>\n                      </ListItem>\n                    </Paper>\n                  ))}\n                </List>\n              )}\n            </Box>\n          )}\n          \n          {upgrading !== null && (\n            <Box sx={{ mt: 3 }}>\n              <Paper \n                elevation={2} \n                sx={{ \n                  p: 2,\n                  bgcolor: themeSettings.darkMode ? '#3d3d3d' : '#ffffff',\n                  borderRadius: themeSettings.borderRadius - 2,\n                }}\n              >\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <Typography \n                    variant=\"subtitle1\" \n                    fontWeight={600} \n                    sx={{ fontFamily: themeSettings.fontFamily }}\n                  >\n                    Editar Reporte\n                  </Typography>\n\n                  <Tooltip title=\"Ver ejemplos de comandos de formato\">\n                    <IconButton \n                      color=\"primary\" \n                      size=\"small\" \n                      onClick={() => setHelpDialogOpen(true)}\n                      sx={{ ml: 1 }}\n                    >\n                      <HelpOutline />\n                    </IconButton>\n                  </Tooltip>\n                </Box>\n                \n                <Typography \n                  variant=\"caption\" \n                  color=\"text.secondary\" \n                  paragraph\n                  sx={{ fontFamily: themeSettings.fontFamily, display: 'flex', alignItems: 'center' }}\n                >\n                  <Info fontSize=\"small\" color=\"action\" sx={{ mr: 0.5 }} />\n                  Puedes incluir comandos especiales usando el formato [clave:valor].\n                  <Button \n                    size=\"small\" \n                    color=\"primary\" \n                    variant=\"text\" \n                    onClick={() => setHelpDialogOpen(true)}\n                    sx={{ ml: 1, minWidth: 'auto', p: '2px 5px' }}\n                  >\n                    Ver ejemplos\n                  </Button>\n                </Typography>\n                \n                <TextField\n                  label=\"Personalizar reporte\"\n                  fullWidth\n                  multiline\n                  rows={4}\n                  value={upgradeText}\n                  onChange={(e) => setUpgradeText(e.target.value)}\n                  sx={{ \n                    mb: 2,\n                    '& .MuiInputBase-root': {\n                      fontFamily: themeSettings.fontFamily,\n                      fontSize: themeSettings.fontSize / 16 + 'rem',\n                    }\n                  }}\n                  variant=\"outlined\"\n                  InputProps={{\n                    style: { \n                      backgroundColor: themeSettings.darkMode ? 'rgba(255,255,255,0.05)' : undefined,\n                      color: themeSettings.darkMode ? '#fff' : undefined\n                    }\n                  }}\n                />\n                \n                <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                  <Button \n                    onClick={() => setUpgrading(null)} \n                    sx={{ mr: 1 }}\n                  >\n                    Cancelar\n                  </Button>\n                  \n                  <Button \n                    onClick={async () => {\n                      if (!upgrading) return;\n                      \n                      const reportIndex = pdfList.findIndex(report => report.id === upgrading);\n                      if (reportIndex === -1) return;\n                      \n                      const report = pdfList[reportIndex];\n                      setLoading(true);\n                      \n                      try {\n                        // Extraer argumentos del texto actualizado\n                        const { cleanText, args } = parseArguments(upgradeText);\n                        \n                        // Actualizar el reporte\n                        const updatedReport: PdfItem = {\n                          ...report,\n                          content: upgradeText,\n                          version: report.version + 1,\n                        };\n                        \n                        // Actualizar la lista de reportes\n                        const updatedList = [...pdfList];\n                        updatedList[reportIndex] = updatedReport;\n                        setPdfList(updatedList);\n                        \n                        // Verificar si el nombre del reporte contiene \"Grafico\"\n                        if (report.name.includes(\"Grafico\")) {\n                          // Si es reporte con gráficos, regenerar con gráficos\n                          await generatePDFWithCharts(updatedReport);\n                        } else {\n                          // Regenerar PDF normal\n                          generatePDF(updatedReport);\n                        }\n                        \n                        // Limpiar estado\n                        setUpgrading(null);\n                        setUpgradeText(\"\");\n                      } catch (error) {\n                        console.error(\"Error al actualizar reporte:\", error);\n                      } finally {\n                        setLoading(false);\n                      }\n                    }}\n                    variant=\"contained\" \n                    color=\"secondary\"\n                    startIcon={<ArrowUpward />}\n                    disabled={loading}\n                  >\n                    {loading ? <CircularProgress size={24} /> : \"Actualizar y Generar\"}\n                  </Button>\n                </Box>\n              </Paper>\n            </Box>\n          )}\n        </Paper>\n      </Modal>\n      \n      {/* Diálogo de ayuda con ejemplos de formato */}\n      <Dialog \n        open={helpDialogOpen} \n        onClose={() => setHelpDialogOpen(false)}\n        maxWidth=\"md\"\n      >\n        <DialogTitle sx={{ \n          display: 'flex', \n          alignItems: 'center', \n          fontFamily: themeSettings.fontFamily,\n          bgcolor: themeSettings.darkMode ? '#3d3d3d' : '#f5f7fa',\n          color: themeSettings.darkMode ? '#ffffff' : 'inherit',\n        }}>\n          <Info color=\"primary\" sx={{ mr: 1 }} /> \n          Guía para personalizar texto en reportes\n        </DialogTitle>\n        \n        <DialogContent sx={{ \n          bgcolor: themeSettings.darkMode ? '#2d2d2d' : '#ffffff',\n          color: themeSettings.darkMode ? '#ffffff' : 'inherit',\n          p: 3\n        }}>\n          <Typography variant=\"subtitle1\" gutterBottom fontWeight={600}>\n            Utiliza comandos especiales en formato [clave:valor] para personalizar tus reportes:\n          </Typography>\n          \n          <Box component=\"ul\" sx={{ pl: 2 }}>\n            <Box component=\"li\" sx={{ mb: 1 }}>\n              <Typography fontFamily={themeSettings.fontFamily}>\n                <strong>[texto_grande:true]</strong> - Aumenta el tamaño del texto principal\n              </Typography>\n            </Box>\n            \n            <Box component=\"li\" sx={{ mb: 1 }}>\n              <Typography fontFamily={themeSettings.fontFamily}>\n                <strong>[color_texto:#FF5733]</strong> - Cambia el color del texto (utiliza código hexadecimal)\n              </Typography>\n            </Box>\n            \n            <Box component=\"li\" sx={{ mb: 1 }}>\n              <Typography fontFamily={themeSettings.fontFamily}>\n                <strong>[recomendaciones:Texto de recomendaciones específicas que aparecerán en esa sección]</strong> - Añade contenido a la sección de recomendaciones\n              </Typography>\n            </Box>\n            \n            <Box component=\"li\" sx={{ mb: 1 }}>\n              <Typography fontFamily={themeSettings.fontFamily}>\n                <strong>[resaltar:voltaje]</strong> - Resalta todas las menciones de \"voltaje\" en el documento\n              </Typography>\n            </Box>\n            \n            <Box component=\"li\" sx={{ mb: 1 }}>\n              <Typography fontFamily={themeSettings.fontFamily}>\n                <strong>[formato_fecha:largo]</strong> - Cambia el formato de fechas a versión completa\n              </Typography>\n            </Box>\n          </Box>\n          \n          <Paper \n            variant=\"outlined\" \n            sx={{ \n              p: 2, \n              mt: 2, \n              bgcolor: themeSettings.darkMode ? 'rgba(255,255,255,0.05)' : 'rgba(25, 118, 210, 0.05)',\n              borderRadius: themeSettings.borderRadius - 2,\n            }}\n          >\n            <Typography variant=\"subtitle2\" gutterBottom color=\"primary\">\n              Ejemplo completo:\n            </Typography>\n            <Typography \n              variant=\"body2\" \n              sx={{\n                fontFamily: 'monospace',\n                whiteSpace: 'pre-wrap',\n                p: 1\n              }}\n            >\n              Reporte generado el 15 de mayo: Análisis de irradiancia (750-840 W/m²), voltaje (119-122 V) y condiciones ambientales (temperatura 28.4°C).\n              [texto_grande:true]\n              [color_texto:#2E7D32]\n              [recomendaciones:Revisar niveles de voltaje semanalmente. Limpiar paneles solares cada 15 días para mantener eficiencia óptima.]\n              [resaltar:irradiancia]\n              [formato_fecha:largo]\n            </Typography>\n          </Paper>\n\n          <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mt: 2 }}>\n            Estos comandos se procesarán al generar el PDF y no aparecerán en el documento final.\n            Pueden combinarse varios comandos en el mismo texto.\n          </Typography>\n        </DialogContent>\n        \n        <DialogActions sx={{ \n          bgcolor: themeSettings.darkMode ? '#3d3d3d' : '#f5f7fa',\n          p: 2 \n        }}>\n          <Button \n            onClick={() => {\n              // Añadir ejemplo al texto actual\n              setUpgradeText(prev => {\n                const ejemplo = \"[texto_grande:true]\\n[color_texto:#2E7D32]\\n[recomendaciones:Añade aquí tus recomendaciones específicas]\";\n                return prev ? `${prev}\\n${ejemplo}` : ejemplo;\n              });\n              setHelpDialogOpen(false);\n            }}\n            variant=\"outlined\"\n            startIcon={<CloudDownload />}\n            sx={{ mr: 1 }}\n          >\n            Insertar Ejemplo\n          </Button>\n          <Button onClick={() => setHelpDialogOpen(false)} variant=\"contained\">\n            Entendido\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </ThemeProvider>\n  );\n};\n\nexport default ReportModal;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3842, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3848, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/zente/source/repos/KobaSystemsIT/Dashboard-Mineria/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\nimport \"./styles/pages.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport PlusIcon from \"./components/tooltips/PlusIcon\";\r\nimport TriangleIcon from \"./components/tooltips/TriangleIcon\";\r\nimport ResElectricalIcon from \"./components/tooltips/ResElectricalIcon\";\r\nimport ResIrradianceIcon from \"./components/tooltips/ResIrradianceIcon\";\r\nimport ResEnviromentIcon from \"./components/tooltips/ResEnviromentIcon\";\r\nimport EnvironmentSummary from \"./components/EnviromentSummary\";\r\nimport HorizontalBarChart from \"./components/graphs/MinMaxEnviromentGraph\";\r\nimport EnvironmentSummarySection from \"./components/EnviromentSummary\";\r\nimport SensorsList from \"./components/sensorCount\";\r\nimport ReportModal from \"./components/ModalResumen\";\r\n\r\n\r\nconst Dashboard = () => {\r\n  const [data, setData] = useState(null);\r\n\r\n  const summaryData = {\r\n    minTemperature: 25.3,\r\n    maxTemperature: 45.1,\r\n    avgTemperature: 35.2,\r\n    minWindSpeed: 0.8,\r\n    maxWindSpeed: 3.2,\r\n    avgWindSpeed: 2.1,\r\n    minWindDirection: 300,\r\n    maxWindDirection: 180,\r\n    avgWindDirection: 150,\r\n    anomaliesFound: 3,\r\n  };\r\n\r\n  const sensorsData = {\r\n    \"Sensor 1\": {\r\n      ac: { valor: 10, power: 50 },\r\n      dc: { valor: 5, power: 25 }\r\n    },\r\n    \"Sensor 2\": {\r\n      ac: { valor: 12, power: 55 },\r\n      dc: { valor: 6, power: 30 }\r\n    },\r\n    \"Sensor 3\": {\r\n      ac: { valor: 12, power: 55 },\r\n      dc: { valor: 6, power: 43 }\r\n    },\r\n    \"Sensor 4\": {\r\n      ac: { valor: 12, power: 55 },\r\n      dc: { valor: 6, power: 27 }\r\n    },\r\n    \"Sensor 5\": {\r\n      ac: { valor: 12, power: 55 },\r\n      dc: { valor: 6, power: 32 }\r\n    },\r\n    // Agrega más sensores aquí\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const socket = new WebSocket(\"ws://localhost:8765\");\r\n    socket.onmessage = (event) => {\r\n      const newData = JSON.parse(event.data);\r\n      setData(newData);\r\n    };\r\n    return () => socket.close();\r\n  }, []);\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"h-screen pt-5\">\r\n        \r\n        <div className=\"div-color rounded-lg shadow-xl h-1/2 mx-5\">\r\n          <TriangleIcon />\r\n\r\n                    {/*aqui van graficas importantes*/}\r\n\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-4 gap-4 mx-5 mt-8\">\r\n\r\n          <div className=\"col-span-1 div-color rounded-lg shadow-xl\">\r\n            <div className=\"flex justify-start items-center space-x-4 p-4\">\r\n              <ResIrradianceIcon />\r\n              <TriangleIcon />\r\n            </div>\r\n\r\n            <div className=\"h-64 px-2\">\r\n              <IrradianceVsPowerGraph />\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-span-1 div-color rounded-lg shadow-xl \">\r\n            <div className=\"flex justify-start items-center space-x-4 p-4 \">\r\n              <ResElectricalIcon />\r\n              <TriangleIcon />\r\n            </div>\r\n              \r\n            <div className=\"p-4 text-black max-h-80 overflow-y-auto custom-scroll\">\r\n              <SensorsList sensors={sensorsData} />\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-span-2 div-color rounded-lg shadow-xl \">\r\n            <div className=\"flex justify-start items-center space-x-4 p-4\">\r\n              <ResEnviromentIcon />\r\n              <div onClick={() => setOpenModal(true)} style={{ cursor: \"pointer\" }}>\r\n                <PlusIcon />\r\n              </div>\r\n              <TriangleIcon />\r\n            </div> \r\n\r\n          <EnvironmentSummarySection summaryData={summaryData} />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <ReportModal open={openModal} onClose={() => setOpenModal(false)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;;;AAZA;;;;;;;;;;;AAeA,MAAM,YAAY;;IAChB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,MAAM,cAAc;QAClB,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,cAAc;QACd,cAAc;QACd,cAAc;QACd,kBAAkB;QAClB,kBAAkB;QAClB,kBAAkB;QAClB,gBAAgB;IAClB;IAEA,MAAM,cAAc;QAClB,YAAY;YACV,IAAI;gBAAE,OAAO;gBAAI,OAAO;YAAG;YAC3B,IAAI;gBAAE,OAAO;gBAAG,OAAO;YAAG;QAC5B;QACA,YAAY;YACV,IAAI;gBAAE,OAAO;gBAAI,OAAO;YAAG;YAC3B,IAAI;gBAAE,OAAO;gBAAG,OAAO;YAAG;QAC5B;QACA,YAAY;YACV,IAAI;gBAAE,OAAO;gBAAI,OAAO;YAAG;YAC3B,IAAI;gBAAE,OAAO;gBAAG,OAAO;YAAG;QAC5B;QACA,YAAY;YACV,IAAI;gBAAE,OAAO;gBAAI,OAAO;YAAG;YAC3B,IAAI;gBAAE,OAAO;gBAAG,OAAO;YAAG;QAC5B;QACA,YAAY;YACV,IAAI;gBAAE,OAAO;gBAAI,OAAO;YAAG;YAC3B,IAAI;gBAAE,OAAO;gBAAG,OAAO;YAAG;QAC5B;IAEF;IAIA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM,SAAS,IAAI,UAAU;YAC7B,OAAO,SAAS;uCAAG,CAAC;oBAClB,MAAM,UAAU,KAAK,KAAK,CAAC,MAAM,IAAI;oBACrC,QAAQ;gBACV;;YACA;uCAAO,IAAM,OAAO,KAAK;;QAC3B;8BAAG,EAAE;IAEL,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,qBACE;;0BAEE,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,wJAAA,CAAA,UAAY;;;;;;;;;;kCAMf,6LAAC;wBAAI,WAAU;;0CAEb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,6JAAA,CAAA,UAAiB;;;;;0DAClB,6LAAC,wJAAA,CAAA,UAAY;;;;;;;;;;;kDAGf,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;;;;;;;;;;;;;;;;0CAKL,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,6JAAA,CAAA,UAAiB;;;;;0DAClB,6LAAC,wJAAA,CAAA,UAAY;;;;;;;;;;;kDAGf,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC,2IAAA,CAAA,UAAW;4CAAC,SAAS;;;;;;;;;;;;;;;;;0CAK1B,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,6JAAA,CAAA,UAAiB;;;;;0DAClB,6LAAC;gDAAI,SAAS,IAAM,aAAa;gDAAO,OAAO;oDAAE,QAAQ;gDAAU;0DACjE,cAAA,6LAAC,oJAAA,CAAA,UAAQ;;;;;;;;;;0DAEX,6LAAC,wJAAA,CAAA,UAAY;;;;;;;;;;;kDAGjB,6LAAC,iJAAA,CAAA,UAAyB;wCAAC,aAAa;;;;;;;;;;;;;;;;;;;;;;;;0BAK5C,6LAAC,4IAAA,CAAA,UAAW;gBAAC,MAAM;gBAAW,SAAS,IAAM,aAAa;;;;;;;;AAGhE;GA5GM;KAAA;uCA8GS","debugId":null}},
    {"offset": {"line": 4139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}